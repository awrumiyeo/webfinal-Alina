<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Home Page</title>
  <link rel="stylesheet" href="style.css">
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f4;
      margin: 0;
      padding: 0;
    }

    nav ul {
      list-style: none;
      padding: 0;
      margin: 0;
      display: flex;
      background: #333;
      color: white;
    }

    nav ul li {
      margin: 0;
      padding: 10px;
    }

    nav ul li a {
      color: white;
      text-decoration: none;
      padding: 10px;
      display: inline-block;
    }

    nav ul li a:hover {
      background: #555;
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 20px;
    }

    .content {
      display: flex;
      justify-content: space-between;
      gap: 20px;
    }

    .news {
      background: #fff;
      padding: 20px;
      border-radius: 5px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      margin-bottom: 20px;
    }

    .charts {
      display: flex;
      justify-content: space-between;
      gap: 20px;
    }

    .chart-section {
      flex: 1;
      background: #fff;
      padding: 20px;
      border-radius: 5px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      text-align: center;
    }

    canvas {
      max-width: 100%;
      margin: 0 auto;
    }

    footer {
      text-align: center;
      padding: 20px;
      background: #333;
      color: white;
      margin-top: 30px;
    }

    .error {
      color: red;
      font-weight: bold;
      text-align: center;
    }
  </style>
</head>
<body>
<nav>
  <ul>
    <li><a href="/">Home</a></li>
    <li><a href="/portfolio">Portfolio</a></li>
    <li><a href="/login">Login</a></li>
  </ul>
</nav>

<div class="container">
  <h1>Welcome to the Home Page!</h1>

  <!-- News Section -->
  <div class="news">
    <h2>Latest News</h2>
    <div id="news-container">
      <!-- News items will be loaded here -->
    </div>
  </div>

  <!-- Charts Section -->
  <div class="charts">
    <!-- Healthcare Stock Chart -->
    <div class="chart-section">
      <h3>Healthcare Stock Prices</h3>
      <canvas id="healthcareChart"></canvas>
    </div>

    <!-- Air Quality Chart -->
    <div class="chart-section">
      <h3>Air Quality</h3>
      <canvas id="airQualityChart"></canvas>
    </div>
  </div>
</div>

<footer>
  <p>&copy; 2024 Portfolio Platform | Alina Byurabekova | BDA-2306</p>
</footer>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  document.addEventListener("DOMContentLoaded", async () => {
    // NEWS API
    const newsContainer = document.getElementById("news-container");
    const rssUrl = "https://rss.nytimes.com/services/xml/rss/nyt/World.xml";

    try {
      const newsResponse = await fetch(`https://api.allorigins.win/get?url=${encodeURIComponent(rssUrl)}`);
      const newsData = await newsResponse.json();

      const parser = new DOMParser();
      const xml = parser.parseFromString(newsData.contents, "text/xml");
      const items = xml.querySelectorAll("item");

      if (items.length) {
        items.forEach((item, index) => {
          if (index < 5) {
            const title = item.querySelector("title").textContent;
            const description = item.querySelector("description").textContent;
            const link = item.querySelector("link").textContent;

            const newsItem = document.createElement("div");
            newsItem.innerHTML = `
              <h3>${title}</h3>
              <p>${description}</p>
              <a href="${link}" target="_blank">Read more</a>
            `;
            newsContainer.appendChild(newsItem);
          }
        });
      } else {
        newsContainer.innerHTML = "<p>News is currently unavailable.</p>";
      }
    } catch (error) {
      console.error("Error fetching news:", error);
      newsContainer.innerHTML = "<p>Failed to load news.</p>";
    }

    // HEALTHCARE STOCK PRICES API
    const stockApiUrl = "https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=JNJ&apikey=DSDLALT1Z91XN16M";

    try {
      const response = await fetch(stockApiUrl);
      const data = await response.json();

      const stockPrices = Object.values(data["Time Series (Daily)"]).slice(0, 5).map(day => parseFloat(day["4. close"]));
      const stockDates = Object.keys(data["Time Series (Daily)"]).slice(0, 5);

      const healthcareCtx = document.getElementById("healthcareChart").getContext("2d");
      new Chart(healthcareCtx, {
        type: "bar",
        data: {
          labels: stockDates.reverse(),
          datasets: [{
            label: "Stock Price (USD)",
            data: stockPrices.reverse(),
            backgroundColor: "rgba(75, 192, 192, 0.6)",
            borderColor: "rgba(75, 192, 192, 1)",
            borderWidth: 1
          }]
        },
        options: {
          responsive: true,
          scales: { y: { beginAtZero: true } }
        }
      });
    } catch (error) {
      console.error("Error fetching stock data:", error);
      document.getElementById("healthcareChart").parentElement.innerHTML = "<p class='error'>Failed to load healthcare stock data.</p>";
    }

    // AIR QUALITY API
    const airQualityApiUrl = "http://api.openweathermap.org/data/2.5/air_pollution?lat=37.7749&lon=-122.4194&appid=05455621fe6811ec38e1f5bda7eeb8b6";

    try {
      const airQualityResponse = await fetch(airQualityApiUrl);
      const airQualityData = await airQualityResponse.json();

      const pollutants = Object.entries(airQualityData.list[0].components);
      const labels = pollutants.map(([key]) => key.toUpperCase());
      const values = pollutants.map(([, value]) => value);

      const airQualityCtx = document.getElementById("airQualityChart").getContext("2d");
      new Chart(airQualityCtx, {
        type: "bar",
        data: {
          labels: labels,
          datasets: [{
            label: "Pollutant Concentration (µg/m³)",
            data: values,
            backgroundColor: "rgba(75, 192, 192, 0.6)",
            borderColor: "rgba(75, 192, 192, 1)",
            borderWidth: 1
          }]
        },
        options: {
          responsive: true,
          scales: { y: { beginAtZero: true } }
        }
      });
    } catch (error) {
      console.error("Error fetching air quality data:", error);
      document.getElementById("airQualityChart").parentElement.innerHTML = "<p class='error'>Failed to load air quality data.</p>";
    }
  });
</script>
</body>
</html>
